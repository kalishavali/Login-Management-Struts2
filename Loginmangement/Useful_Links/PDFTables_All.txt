package authentication;

import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Map;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.interceptor.SessionAware;

import Testing.Database_Access;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.draw.DottedLineSeparator;
import com.opensymphony.xwork2.ActionSupport;

public class Testing_Action extends ActionSupport implements SessionAware{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	HttpServletResponse response=ServletActionContext.getResponse();
	HttpServletRequest request=ServletActionContext.getRequest();
	Document document = new Document();
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		
	  public void exportToPdf() { // no return type
	    try {
	    	PdfWriter.getInstance(document, baos);
	    	document.open();
	    	
	        Font font=FontFactory.getFont(request.getSession().getServletContext()+"/Fonts/Quattrocento-Regular.ttf",7);
			Font font1=FontFactory.getFont("Fonts/Quattrocento-Regular.ttf",7,font.BOLD|font.UNDERLINE);
			Font font2=FontFactory.getFont("Fonts/Quattrocento-Regular.ttf",7,font.BOLD);
			ArrayList headingsList=Database_Access.getHeadings();
    		ArrayList dataList=Database_Access.getDataList();
    		ArrayList<String> commonDataList=Database_Access.getCommonDataList();
    		String reportName=Database_Access.getReportName();
    		ArrayList<String> temp=null;
    		
	        
	        
	        
	        int rowSpan=headingsList.size();
    		int columnCount=0;
    		ArrayList<String> headingTable=(ArrayList<String>)headingsList.get(0);
    		//ArrayList<String> headingTable=(ArrayList<String>)((ArrayList)resultList.get(3)).get(0);
    		for(int i=0;i<headingTable.size();i++){
    			String element=headingTable.get(i);
    			if(headingTable.get(i).startsWith("-")){
    				columnCount=columnCount+Integer.parseInt(headingTable.get(i).substring(1))-1;
    			}
    			else if(headingTable.get(i).startsWith("+")){
    				//Nothing
    			}else{
    				columnCount=columnCount+1;
    			}
    		}
    		
    		//Report Name
    		Paragraph p1=new Paragraph();
    		p1.add(new Chunk(reportName,font1));
    		p1.setAlignment(Element.ALIGN_CENTER);
    		
    		//Report as on Date
    		SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
        	String date = sdf.format(new Date()); 
    		Paragraph p2=new Paragraph();
    		p2.add(new Chunk("Report as on Date : ",font2));
    		p2.add(new Chunk(date,font));
    		p2.setSpacingBefore(8f);
    		p2.setAlignment(Element.ALIGN_CENTER);
    		
    		//District,Mandal,Panchayat Data
    		Paragraph p3=new Paragraph();
    		p3.setAlignment(Element.ALIGN_LEFT);
	    	for(int i = 3; i < commonDataList.size(); i++){
	    		String ele=commonDataList.get(i);
	    		p3.add(new Chunk(commonDataList.get(i)+" : " ,font2));
	    		p3.add(new Chunk(commonDataList.get(i+1),font));
	    		p3.add(Chunk.TABBING);
		        i=i+1;
	    	}
    		
    		//Separator
    		DottedLineSeparator separator = new DottedLineSeparator();
            separator.setPercentage(59100f / 523f);
            Chunk linebreak = new Chunk(separator);
            
            //Headings
    		PdfPTable table=new PdfPTable(columnCount);
    		PdfPCell cell;
    		for(int i=0;i<headingsList.size();i++){
    				temp=(ArrayList)headingsList.get(i);
    				for(int j = 0; j<temp.size(); j++){
    					String element=temp.get(j);
			    		if(j!=temp.size()-1 && temp.get(j+1).startsWith("-")){
			    				cell=new PdfPCell(new Phrase(temp.get(j),font));
			    				cell.setColspan(Integer.parseInt(temp.get(j+1).substring(1)));
			    				cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
			    				cell.setHorizontalAlignment(Element.ALIGN_CENTER);
			        			table.addCell(cell);
			        			j=j+1;
			    		}
			    		else if(j!=temp.size()-1 && temp.get(j+1).startsWith("+")){
		    				cell=new PdfPCell(new Phrase(temp.get(j),font));
		    				cell.setRowspan(Integer.parseInt(temp.get(j+1).substring(1)));
		    				cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
		    				cell.setHorizontalAlignment(Element.ALIGN_CENTER);
		        			table.addCell(cell);
		        			j=j+1;
			    		}
			    		else if(i==headingsList.size()-1){
			    			cell=new PdfPCell(new Phrase(temp.get(j),font));
							cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
							cell.setHorizontalAlignment(Element.ALIGN_CENTER);
							table.addCell(cell);
			    		}
			    		else{
		    				cell=new PdfPCell(new Phrase(temp.get(j),font));
		    				cell.setRowspan(rowSpan);
		    				cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
		    				cell.setHorizontalAlignment(Element.ALIGN_CENTER);
		    				table.addCell(cell);
			    		}
    				}
    		}
    		table.setHeaderRows(rowSpan);
    		
    		//Data
    		temp=new ArrayList<String>();
    		for(int i = 0; i < dataList.size(); i++){
    			temp = (ArrayList)dataList.get(i);
    			String num=Integer.toString(i+1);
    			cell=new PdfPCell(new Phrase(num,font));
    			cell.setHorizontalAlignment(Element.ALIGN_CENTER);
	    		table.addCell(cell);
	    		
    			for(int j = 1; j <columnCount; j++){
    				if(j<temp.size()){
	    				cell=new PdfPCell(new Phrase(temp.get(j),font));
	        			cell.setHorizontalAlignment(Element.ALIGN_CENTER);
	    	    		table.addCell(cell);  
    				}
    				else{
    					cell=new PdfPCell(new Phrase("  ",font));
	        			cell.setHorizontalAlignment(Element.ALIGN_CENTER);
	    	    		table.addCell(cell);
    				}
    		    }
    		}
    		document.add(p1);
    		document.add(p2);
    		document.add(p3);
            document.add(linebreak);
    		document.add(table);
	        document.close(); 
	        ServletOutputStream outputStream = response.getOutputStream() ; 
	        baos.writeTo(outputStream); 
	        response.setHeader("Content-Disposition", "attachment; filename=\"sample.pdf\""); 
	        response.setContentType("application/pdf"); 
	        outputStream.flush(); 
	        outputStream.close(); 
	    }
	    catch(DocumentException e){
	    	baos.reset();
    		e.printStackTrace();
    	}
    	catch(FileNotFoundException e){
    		e.printStackTrace();
    	}
    	catch(Exception e){
    		e.printStackTrace();
    	}

	  }

	@Override
	public void setSession(Map<String, Object> sessionMap) {
        
    } 
	}
